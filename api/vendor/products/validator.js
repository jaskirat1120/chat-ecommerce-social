// npm modules
const joi = require('joi');
const APP_CONSTANTS = require('../../../config/constants/app-defaults');
const UniversalFunctions = require('../../../utils/universal-functions');
module.exports = {
    ADD_PRODUCT: {
        // products: joi.array().items(
        //     joi.object().keys({
        //        })
        // ).required(),
        vendorId: joi.string().length(24).allow(""),
        _id: joi.string().length(24),
        title: joi.object().description("{en:'12',pt:'12'}"),
        description: joi.object().description("{en:'12',pt:'12'}"),
        category: joi.string().length(24),
        collectionId: joi.string().length(24).allow(""),
        subCategory: joi.string().length(24),
        refundable: joi.boolean().valid([true, false]).default(false),
        // colors: joi.array().items(joi.string().length(24).optional()),
        colors: joi.string().length(24).optional().allow(""),
        sizes: joi.string().length(24).optional().allow(""),
        brand: joi.string().allow(""),
        volume: joi.string().allow(""),
        shelfLife: joi.string().allow(""),
        storageTemperature: joi.string().allow(""),
        certification: joi.string().allow(""),
        sizesArray: joi.array().items(joi.string().length(24)).allow([]),
        // sizes: joi.array().items(joi.string().length(24).optional()),
        price: joi.number().allow(""),
        productCost: joi.number().allow(""),
        profit: joi.number().allow(""),
        profitPercentage: joi.number().allow(""),
        discount: joi.number().allow(""),
        currency: joi.string().allow(""),
        productType: joi.string().valid([APP_CONSTANTS.PRODUCT_TYPE.TRADING,
            APP_CONSTANTS.PRODUCT_TYPE.NON_TRADING]),
        productTangibleType: joi.string().valid([APP_CONSTANTS.PRODUCT_TANGIBLE_TYPE.TANGIBLE,
            APP_CONSTANTS.PRODUCT_TANGIBLE_TYPE.DIGITAL]),
        externalUrl: joi.string().allow(""),
        tax: joi.number().allow(""),
        weight: joi.string().allow(""),
        length: joi.number().allow(""),
        breadth: joi.number().allow(""),
        height: joi.number().allow(""),
        unit: joi.string().allow(""),
        material: joi.string().allow(""),
        quantityAvailable: joi.number().allow(""),
        shippingCharges: joi.number().allow(""),
        // soldOut: joi.boolean(),
        availableForSale: joi.boolean(),
        images: joi.array().items(UniversalFunctions.mediaAuth),
        videos: joi.array().items(UniversalFunctions.mediaAuth),
        variantsAvailable: joi.boolean().valid([true, false]),
        productVariants: joi.array().items(
            joi.object().keys({
                _id: joi.string().allow(""),
                colors: joi.string().length(24).optional().allow(""),
                colorCode: joi.string().optional().allow(""),
                sizes: joi.string().length(24).optional().allow(""),
                price: joi.number().allow(""),
                productCost: joi.number().allow(""),
                profit: joi.number().allow(""),
                profitPercentage: joi.number().allow(""),
                discount: joi.number().allow(""),
                tax: joi.number().allow(""),
                unit: joi.string().allow(""),
                length: joi.number().allow(""),
                breadth: joi.number().allow(""),
                height: joi.number().allow(""),
                currency: joi.string().allow(""),
                // externalUrl: joi.string(),
                status: joi.string().valid([APP_CONSTANTS.STATUS_ENUM.ACTIVE, APP_CONSTANTS.STATUS_ENUM.DELETED]),
                weight: joi.string().allow(""),
                material: joi.string().allow(""),
                quantityAvailable: joi.number().allow(""),
                // soldOut: joi.boolean(),
                availableForSale: joi.boolean(),
                // images: joi.array().items(UniversalFunctions.mediaAuth),
                // videos: joi.array().items(UniversalFunctions.mediaAuth),
            })
        ).allow([]).allow("").optional(),
        shipping: joi.object().keys({
            origin: joi.string().allow(""),
            processingTime: joi.string().allow(""),
            shippingDetail: joi.array().items(
                joi.object().keys({
                    addedInPrice: joi.boolean().valid([true, false]),
                    type: joi.string().valid([APP_CONSTANTS.SHIPPING_TYPE.LOCAL,APP_CONSTANTS.SHIPPING_TYPE.EVERYWHERE_ELSE]).required(),
                    shippingCourier: joi.string().length(24),
                    shippingChargesType: joi.string().valid([APP_CONSTANTS.SHIPPING_CHARGES_TYPE.FREE,APP_CONSTANTS.SHIPPING_CHARGES_TYPE.FIXED]).required(),
                    shippingCharges: joi.number().default(0),
                    currency: joi.string().allow(""),
                })
            )
        })
    },
    LIST_PRODUCT: {
        isCSV: joi.boolean().allow("").valid([true, false]),
        vendorId: joi.string().length(24).allow(""),
        skip: joi.number().optional(),
        limit: joi.number().optional(),
        availableForSale: joi.boolean(),
        withoutCollection: joi.boolean(),
        collectionId: joi.string().length(24).allow(""),
        color: joi.string().length(24).allow(""),
        size: joi.string().length(24).allow(""),
        productName: joi.string().allow(""),
        startDate: joi.number(),
        endDate: joi.number(),
        endPrice: joi.number(),
        startPrice: joi.number(),
        endDiscount: joi.number(),
        startDiscount: joi.number(),
        endQuantity: joi.number(),
        startQuantity: joi.number(),
    },
    DELETE_PRODUCT: {
        vendorId: joi.string().allow(""),
        productId: joi.string().length(24).required()
    },
    GET_SHIPPING_COST: {
        vendorId: joi.string().allow(""),
        length: joi.number().allow(""),
        breadth: joi.number().allow(""),
        height: joi.number().allow(""),
        weight: joi.number().allow(""),
        shippingCourier: joi.string().length(24),
        currency: joi.string().default(APP_CONSTANTS.APP.DEFAULT_CURRENCY)
    },
};
